@page "/reserva-confirmada"
@inject NavigationManager Nav
@inject IHttpContextAccessor httpAccessor
@inject TuServicioReserva servicioReserva

<h2 class="text-center text-success mt-5">¡Reserva enviada correctamente!</h2>

@if (ultimaReserva != null)
{
    <div class="container text-center mt-4 border rounded p-4 shadow-sm">
        <h4 class="mb-3">Apartamento reservado: <span class="text-primary">@ultimaReserva.NombreApartamento</span></h4>

        <p>
            <strong>Estado de la solicitud:</strong>
            @if (ultimaReserva.Estado == "Pendiente")
            {
                <span class="text-warning fw-bold">🟡 Pendiente</span>
            }
            else if (ultimaReserva.Estado == "Aceptada")
            {
                <span class="text-success fw-bold">🟢 Aceptada</span>
            }
            else
            {
                <span class="text-danger fw-bold">🔴 Rechazada</span>
            }
        </p>

        <p><strong>Publicado por:</strong> @ultimaReserva.NombrePropietario</p>

        <div class="mt-4">
            <p class="text-muted">Tu solicitud ha sido enviada. Por favor espera a que el propietario la revise y te contacte.</p>
        </div>
    </div>
}
else
{
    <div class="text-center mt-5">
        <p>No se pudo cargar la reserva. Intenta nuevamente.</p>
    </div>
}

@code {
    ReservaDtos? ultimaReserva;

    protected override async Task OnInitializedAsync()
    {
        var userId = httpAccessor.HttpContext?.User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        if (userId != null)
        {
            var reservas = await servicioReserva.ObtenerReservasPorUsuario(userId);
            ultimaReserva = reservas.OrderByDescending(r => r.FechaSolicitud).FirstOrDefault();
        }
    }
}
